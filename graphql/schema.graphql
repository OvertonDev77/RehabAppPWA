type Amenity {
  id: Int!
  name: String!
}

type LevelOfCare {
  id: Int!
  name: String!
}

type Condition {
  id: Int!
  name: String!
}

type Treatment {
  id: Int!
  name: String!
}

type InsuranceProvider {
  id: Int!
  name: String!
}

type Clientele {
  id: Int!
  name: String!
}

type Setting {
  id: Int!
  name: String!
}

type Approach {
  id: Int!
  name: String!
}

type PriceRange {
  id: Int!
  label: String!
}

type Country {
  id: Int!
  name: String!
}

type State {
  id: Int!
  name: String!
}

type Rehab {
  id: Int!
  name: String!
  address: String
  description: String
  website: String
  amenities: [Amenity!]!
  levels_of_care: [LevelOfCare!]!
  conditions: [Condition!]!
  treatments: [Treatment!]!
  insuranceProviders: [InsuranceProvider!]!
  clientele: [Clientele!]!
  settings: [Setting!]!
  approaches: [Approach!]!
  priceRanges: [PriceRange!]!
  countries: [Country!]!
  states: [State!]!
}

input RehabFilterInput {
  amenityNames: [String!]
  levelOfCareNames: [String!]
  conditionNames: [String!]
  treatmentNames: [String!]
  insuranceProviderNames: [String!]
  clienteleNames: [String!]
  settingNames: [String!]
  approachNames: [String!]
  priceRangeLabels: [String!]
  countryNames: [String!]
  stateNames: [String!]
}

type Query {
  rehabs(filter: RehabFilterInput): [Rehab!]!
  amenities: [Amenity!]!
  levelsOfCare: [LevelOfCare!]!
  conditions: [Condition!]!
  treatments: [Treatment!]!
  insuranceProviders: [InsuranceProvider!]!
  clienteles: [Clientele!]!
  settings: [Setting!]!
  approaches: [Approach!]!
  priceRanges: [PriceRange!]!
  countries: [Country!]!
  states: [State!]!
}
