generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model users {
  id   Int    @id @default(autoincrement())
  name String
  reviews Review[]
  rehabs Rehab[] @relation("UserRehabs")
}


model Rehab {
  id          Int       @id @default(autoincrement())
  name        String
  address     String?
  description String?
  website     String?
  // phone     String?   // Uncomment if you want to include phone

  amenities           Amenity[]           @relation("RehabAmenities")
  levels_of_care      LevelOfCare[]       @relation("RehabLevelsOfCare")
  conditions          Condition[]         @relation("RehabConditions")
  treatments          Treatment[]         @relation("RehabTreatments")
  insuranceProviders  InsuranceProvider[] @relation("RehabInsuranceProviders")
  clientele           Clientele[]         @relation("RehabClientele")
  settings            Setting[]           @relation("RehabSettings")
  approaches          Approach[]          @relation("RehabApproaches")
  priceRanges         PriceRange[]        @relation("RehabPriceRanges")
  countries           Country[]           @relation("RehabCountries")
  states              State[]             @relation("RehabStates")
  reviews             Review[]
  userId              Int?
  user                users?              @relation("UserRehabs", fields: [userId], references: [id])
}

model Amenity {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  rehabs Rehab[] @relation("RehabAmenities")
}

model LevelOfCare {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  rehabs Rehab[] @relation("RehabLevelsOfCare")
}

model Condition {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  rehabs Rehab[] @relation("RehabConditions")
}

model Treatment {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  rehabs Rehab[] @relation("RehabTreatments")
}

model InsuranceProvider {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  rehabs Rehab[] @relation("RehabInsuranceProviders")
}

model Clientele {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  rehabs Rehab[] @relation("RehabClientele")
}

model Setting {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  rehabs Rehab[] @relation("RehabSettings")
}

model Approach {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  rehabs Rehab[] @relation("RehabApproaches")
}

model PriceRange {
  id    Int     @id @default(autoincrement())
  label String  @unique
  rehabs Rehab[] @relation("RehabPriceRanges")
}

model Country {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  rehabs Rehab[] @relation("RehabCountries")
}

model State {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  rehabs Rehab[] @relation("RehabStates")
}

model Review {
  id        Int      @id @default(autoincrement())
  content   String
  rating    Int
  createdAt DateTime @default(now())
  userId    Int
  rehabId   Int
  user      users    @relation(fields: [userId], references: [id])
  rehab     Rehab    @relation(fields: [rehabId], references: [id])
} 